geom_histogram(aes(fill=brand), bins = 10) +
facet_wrap(~region)
ggplot(data = CompleteResponses, aes(x= age)) +
geom_histogram(aes(fill=brand), bins = 10)
ggplot(data = CompleteResponses, aes(x = age)) +
geom_bar(stat = "count", aes(fill=brand)) +
facet_wrap(~brand)
ggplot(data = CompleteResponses, aes(x = age)) +
geom_bar(stat = "count", aes(fill=brand)) +
facet_wrap(~brand)
ggplot(data = CompleteResponses, aes(x = age)) +
geom_bar(stat = "count", aes(fill=brand))
ggplot(data = CompleteResponses, aes(x= age)) +
geom_histogram(aes(fill=brand), bins = 30)
ggplot(data = CompleteResponses, aes(x= age)) +
geom_histogram(aes(fill=brand), bins = 30) +
facet_wrap(~brand)
#make plot: difference in salary between brand preference asus vs. sony
ggplot(data = CompleteResponses) +
geom_boxplot(aes(x = brand, y = salary)) #people buying sony have higher salary
#make plot: difference in age between brand preference asus vs. sony
boxplot(CompleteResponses$age ~ CompleteResponses$brand)
ggplot(data = CompleteResponses) +
geom_boxplot(aes(x = brand, y = age)) #no difference in age between asus vs. sony
ggplot(data = CompleteResponses, aes(x = age)) +
geom_bar(stat = "count", aes(fill=brand)) +
facet_wrap(~brand)
ggplot(data = CompleteResponses, aes(x= age)) +
geom_histogram(aes(fill=brand), bins = 30) +
facet_wrap(~brand)
ggplot(data = CompleteResponses, aes(x = salary)) +
geom_bar(stat = "count", aes(fill=brand))
ggplot(data = CompleteResponses, aes(x = salary)) +
geom_histogram(stat = "count", aes(fill=brand), bins = 10)
ggplot(data = CompleteResponses, aes(x = salary)) +
geom_histogram(fill=brand), bins = 10)
ggplot(data = CompleteResponses, aes(x = salary)) +
geom_histogram(aes(fill=brand), bins = 10)
ggplot(data = CompleteResponses, aes(x = salary)) +
geom_histogram(aes(fill=brand), bins = 5) +
facet_wrap(~brand)
ggplot(data = CompleteResponses, aes(x = salary)) +
geom_histogram(aes(fill=brand), bins = 5)
ggplot(data = CompleteResponses, aes(x = salary)) +
geom_histogram(aes(fill=brand), bins = 6)
ggplot(data = CompleteResponses, aes(x = salary)) +
geom_histogram(aes(fill=brand), bins = 6) +
facet_wrap(~brand)
#make plot: difference in salary between brand preference asus vs. sony
ggplot(data = CompleteResponses) +
geom_boxplot(aes(x = brand, y = salary)) #people buying sony have higher salary
ggplot(data = CompleteResponses, aes(x = salary)) +
geom_histogram(aes(fill=brand), bins = 6) +
facet_wrap(~brand)
ggplot(data = CompleteResponses, aes(x = salary)) +
geom_histogram(aes(fill=brand), bins = 6)
#make plot: difference in age between brand preference asus vs. sony
boxplot(CompleteResponses$age ~ CompleteResponses$brand)
ggplot(data = CompleteResponses) +
geom_boxplot(aes(x = brand, y = age)) #no difference in age between asus vs. sony
#make plot: difference in elevel between asus vs. sony
ggplot(data = CompleteResponses, aes(x = elevel)) +
geom_bar(stat = "count", aes(fill=brand)) +
facet_wrap(~brand)
#make plot: difference in elevel between asus vs. sony
ggplot(data = CompleteResponses, aes(x = elevel)) +
geom_bar(stat = "count", aes(fill=brand)) +
facet_wrap(~brand) #no difference in elevel between
ggplot(data = CompleteResponses, aes(x = age)) +
geom_bar(stat = "count", aes(fill=brand)) +
facet_wrap(~brand)
#make plot: difference in age between brand preference asus vs. sony
boxplot(CompleteResponses$age ~ CompleteResponses$brand)
ggplot(data = CompleteResponses) +
geom_boxplot(aes(x = brand, y = age)) #no difference in age between asus vs. sony
ggplot(data = CompleteResponses, aes(x = age)) +
geom_bar(stat = "count", aes(fill=brand)) +
facet_wrap(~brand)
ggplot(data = CompleteResponses, aes(x = age)) +
geom_bar(stat = "count", aes(fill=brand)) +
facet_wrap(~zipcode)
#make plot: difference in elevel between asus vs. sony
ggplot(data = CompleteResponses, aes(x = elevel)) +
geom_bar(stat = "count", aes(fill=brand)) +
facet_wrap(~brand) #no difference in elevel between
#make plot: difference in elevel between asus vs. sony
ggplot(data = CompleteResponses, aes(x = elevel)) +
geom_bar(stat = "count", aes(fill=brand)) +
facet_wrap(~elevel) #no difference in elevel between
#make plot: difference in elevel between asus vs. sony
ggplot(data = CompleteResponses, aes(x = elevel)) +
geom_bar(stat = "count", aes(fill=brand)) +
facet_wrap(~brand) #no difference in elevel between
ggplot(data = CompleteResponses, aes(x = age)) +
geom_bar(stat = "count", aes(fill=brand)) +
facet_wrap(~zipcode)
ggplot(data = CompleteResponses, aes(x = salary)) +
geom_histogram(aes(fill=brand), bins = 6) +
facet_wrap(~brand)
ggplot(data = CompleteResponses, aes(x = salary)) +
geom_histogram(aes(fill=brand), bins = 6)
ggplot(data = CompleteResponses, aes(x = salary)) +
geom_histogram(aes(fill=brand), bins = 6) +
facet_wrap(~zipcode)
ggplot(data = CompleteResponses, aes(x = salary)) +
geom_histogram(aes(fill=brand), bins = 6) +
facet_wrap(~elevel)
ggplot(data = CompleteResponses, aes(x = salary)) +
geom_histogram(aes(fill=brand), bins = 6) +
facet_wrap(~car)
ggplot(data = CompleteResponses, aes(x = salary)) +
geom_histogram(aes(fill=brand), bins = 6) +
facet_wrap(~zipcode)
ggplot(data = CompleteResponses) +
geom_boxplot(aes(x = brand, y = age)) #no difference in age between asus vs. sony
ggplot(data = CompleteResponses, aes(x = age)) +
geom_bar(stat = "count", aes(fill=brand)) +
facet_wrap(~zipcode) #different zipcodes
#make plot: difference in elevel between asus vs. sony
ggplot(data = CompleteResponses, aes(x = elevel)) +
geom_bar(stat = "count", aes(fill=brand)) +
facet_wrap(~brand) #no difference in elevel between
summary(CompleteResponses)
ggplot(data = CompleteResponses, aes(x = car)) +
geom_bar(stat = "count", aes(fill=brand))
ggplot(data = CompleteResponses, aes(x = car)) +
geom_bar(stat = "count", aes(fill=brand)) +
facet_wrap(~brand)
#make plot: difference in parimary car between asus vs. sony
ggplot(data = CompleteResponses, aes(x = car)) +
geom_bar(stat = "count", aes(fill=brand)) +
facet_wrap(~zipcode) #no difference in primary car between asus vs. sony
#make plot: difference in parimary car between asus vs. sony
ggplot(data = CompleteResponses, aes(x = car)) +
geom_bar(stat = "count", aes(fill=brand)) +
facet_wrap(~brand) #no difference in primary car between asus vs. sony
ggplot(data = CompleteResponses, aes(x = zipcode)) +
geom_bar(stat = "count", aes(fill=brand))
ggplot(data = CompleteResponses, aes(x = zipcode)) +
geom_bar(stat = "count", aes(fill=brand)) +
facet_wrap(~brand)
#make plot: difference in credit between brand preference asus vs. sony
ggplot(data = CompleteResponses) +
geom_boxplot(aes(x = brand, y = credit))
ggplot(data = CompleteResponses, aes(x = credit)) +
geom_histogram(aes(fill=brand), bins = 6)
ggplot(data = CompleteResponses, aes(x = credit)) +
geom_histogram(aes(fill=brand), bins = 6) +
facet_wrap(~zipcode)
ggplot(data = CompleteResponses, aes(x = credit)) +
geom_histogram(aes(fill=brand), bins = 10)
ggplot(data = CompleteResponses, aes(x = salary)) +
geom_histogram(aes(fill=brand), bins = 6)
ggplot(data = CompleteResponses, aes(x = credit)) +
geom_histogram(aes(fill=brand), bins = 10) +
facet_wrap(~zipcode)
ggplot(data = CompleteResponses, aes(x = credit)) +
geom_histogram(aes(fill=brand), bins = 10) +
facet_wrap(~brand)
ggplot(data = CompleteResponses, aes(x = credit)) +
geom_histogram(aes(fill=brand), bins = 10) +
facet_wrap(~zipcode)
#make plot: difference in credit between brand preference asus vs. sony
ggplot(data = CompleteResponses) +
geom_boxplot(aes(x = brand, y = credit))
ggplot(data = CompleteResponses, aes(x = credit)) +
geom_histogram(aes(fill=brand), bins = 10) +
facet_wrap(~zipcode)
#changing numeric value to categorical (discretization): age and credit
Catage <- cut(age, breaks=c(0,20,30,40,50,60,70,80,100))
#changing numeric value to categorical (discretization): salary and credit
Catsalary <- cut(salary, breaks=c(0,20000,50000,80000,120000,150000,180000))
#changing numeric value to categorical (discretization): salary and credit
Catage <- cut(CompleteResponses$age, breaks=c(0,20,30,40,50,60,70,80,100))
Catage
Catage (1:10)
Catage [1:10]
hist(CompleteResponses$Catage)
plot(CompleteResponses$Catage)
hist(CompleteResponses$age)
boxplot(CompleteResponses$age)
hist(CompleteResponses$age)
#changing numeric value to categorical (discretization): age and credit
Catage <- cut(CompleteResponses$age, breaks=c(0,20,40,60,80,100))
hist(CompleteResponses$age)
hist(CompleteResponses$Catage)
#changing numeric value to categorical (discretization): age and credit
Catage <- cut(CompleteResponses$age, breaks=c(0,20,40,60,80,100))
summary(CompleteResponses$age)
hist(CompleteResponses$age)
plot(CompleteResponses$age ~ CompleteResponses$brand)
pie(mytable, main="Pie Chart of Brands")
#make plot: difference in salary between brand preference asus vs. sony
ggplot(data = CompleteResponses) +
geom_boxplot(aes(x = brand, y = salary)) #people buying sony have higher salary
ggplot(data = CompleteResponses, aes(x = salary)) +
geom_histogram(aes(fill=brand), bins = 6) +
facet_wrap(~zipcode)
ggplot(data = CompleteResponses) +
geom_boxplot(aes(x = brand, y = age)) #no difference in age between asus vs. sony
ggplot(data = CompleteResponses, aes(x = age)) +
geom_bar(stat = "count", aes(fill=brand)) +
facet_wrap(~zipcode) #different zipcodes
#make plot: difference in elevel between asus vs. sony
ggplot(data = CompleteResponses, aes(x = elevel)) +
geom_bar(stat = "count", aes(fill=brand)) +
facet_wrap(~brand) #no difference in elevel between asus vs. sony
ggplot(data = CompleteResponses, aes(x = elevel)) +
geom_bar(stat = "count", aes(fill=brand))
ggplot(data = CompleteResponses, aes(x = credit)) +
geom_histogram(aes(fill=brand), bins = 10) +
facet_wrap(~zipcode)
str(CompleteResponses)
summary(CompleteResponses$age)
#changing numeric value to categorical (discretization): salary, age and credit
Catsalary <- cut(CompleteResponses$salary, breaks=c(0,30000,60000,90000,120000,150000,180000))
Catcredit <- cut(CompleteResponses$credit, breaks=c(0,100000,200000,300000,400000,500000,600000))
library(caret)
install.packages(lattice)
install.packages(generics)
#make plot: difference in elevel between asus vs. sony
ggplot(data = CompleteResponses, aes(x = elevel)) +
geom_bar(stat = "count", aes(fill=brand)) +
facet_wrap(~brand) #no difference in elevel between asus vs. sony
#make plot: difference in primary car between asus vs. sony
ggplot(data = CompleteResponses, aes(x = car)) +
geom_bar(stat = "count", aes(fill=brand)) +
facet_wrap(~brand) #no difference in primary car between asus vs. sony
#make plot: difference in zipcode between asus vs. sony
ggplot(data = CompleteResponses, aes(x = zipcode)) +
geom_bar(stat = "count", aes(fill=brand)) +
facet_wrap(~brand) #no difference in zipcode between asus vs. sony
#make plot: difference in salary between brand preference asus vs. sony
ggplot(data = CompleteResponses) +
geom_boxplot(aes(x = brand, y = salary)) #people buying sony have higher salary
ggplot(data = CompleteResponses, aes(x = salary)) +
geom_histogram(aes(fill=brand), bins = 6) +
facet_wrap(~zipcode)
library(caret)
set.seed(688)
inTraining <- createDataPartition(CompleteResponses$brand, p = .8, list = FALSE)
install.packages("generics")
install.packages("lattice")
install.packages("lattice")
install.packages("lattice")
inTraining <- createDataPartition(CompleteResponses$brand, p = .8, list = FALSE)
inTraining <- createDataPartition(CompleteResponses$brand, p = .75, list = FALSE)
library(caret)
install.packages("caret")
library(caret)
inTraining <- createDataPartition(CompleteResponses$brand, p = .75, list = FALSE)
library(caret)
inTraining <- createDataPartition(CompleteResponses$brand, p = .75, list = FALSE)
library(caret)
install.packages("gower")
set.seed(688)
library(caret)
inTraining <- createDataPartition(CompleteResponses$brand, p = .75, list = FALSE)
set.seed(688)
trainSet <- CompleteResponses[inTraining,]
testSet <- CompleteResponses[-inTraining,]
View(testSet)
View(trainSet)
install.packages(C50)
install.packages("C50")
#build model with C5.0
tree_mod <- c5.0(x = trainSet[,1:6], y = CompleteResponses$brand)
#build model with C5.0
tree_mod <- C5.0(x = trainSet[,1:6], y = CompleteResponses$brand)
#build model with C5.0
tree_mod <- C5.0(x = trainSet[,1:6], y = CompleteResponses$brand)
library(C50)
install.packages("inum")
library(C50)
#build model with C5.0
tree_mod <- C5.0(x = trainSet[,1:6], y = CompleteResponses$brand)
#convert data type brand: logical to factor
CompleteResponses$brand <- as.factor(CompleteResponses$brand)
#build model with C5.0
tree_mod <- C5.0(x = trainSet[,1:6], y = CompleteResponses$brand)
str(CompleteResponses)
#build model with C5.0
tree_mod <- C5.0(x = trainSet[,1:6], y = CompleteResponses$brand)
View(trainSet)
#build model with C5.0
tree_mod = C5.0(x = trainSet[,1:6], y = CompleteResponses$brand)
#build model with C5.0
tree_mod = C5.0(x = trainSet[,-7], y = trainSet[,7])
str(trainSet)
str(trainSet)
trainSet$brand <- as.factor(trainSet$brand)
str(trainSet)
#build model with C5.0
tree_mod = C5.0(x = trainSet[,-7], y = trainSet[,7])
View(tree_mod)
plot(model, type="s"", main="Decision Tree"")
plot(model, type="s"", main="Decision Tree"")
plot(model, type="s"", main="Decision Tree")
plot(model, type="s, main="Decision Tree")
plot(tree_mod, type="s", main="Decision Tree")
summary(CompleteResponses)
trainSet$brand <- as.factor(trainSet$brand)
str(trainSet)
#build model with C5.0
tree_mod = C5.0(x = trainSet[,1:6], y = trainSet[,7])
#build model with C5.0
tree_mod = C5.0(x = trainSet[,1:6], y = trainSet[,7])
library(C50)
#build model with C5.0
tree_mod = C5.0(x = trainSet[,1:6], y = trainSet[,7])
View(tree_mod)
plot(tree_mod, type="s", main="Decision Tree")
ggplot(data = CompleteResponses, aes(x = credit)) +
geom_histogram(aes(fill=brand), bins = 10) +
facet_wrap(~zipcode)
ggplot(data = CompleteResponses, aes(x = credit)) +
geom_histogram(aes(fill=brand), bins = 10) +
facet_wrap(~zipcode)
#Boxplots for eacht attribute, and see if there are outliers:
boxplot(CompleteResponses$salary)
boxplot(CompleteResponses$age)
hist(CompleteResponses$age)
boxplot(CompleteResponses$age)
hist(CompleteResponses$elevel) #error, x must be numeric
boxplot(CompleteResponses$credit)
#checking the data types
str(CompleteResponses)
#Making boxplots again for the converted attributes:
plot(CompleteResponses$elevel) #instead of hist which is only for numeric values
plot(CompleteResponses$car) #instead of hist which is only for numeric values
plot(CompleteResponses$zipcode) #instead of hist which is only for numeric values
#how to plot brand
plot(CompleteResponses$brand)
#make plot: difference in salary between brand preference asus vs. sony
ggplot(data = CompleteResponses) +
geom_boxplot(aes(x = brand, y = salary)) #people buying sony have higher salary
library(ggplot2)
#make plot: difference in salary between brand preference asus vs. sony
ggplot(data = CompleteResponses) +
geom_boxplot(aes(x = brand, y = salary)) #people buying sony have higher salary
ggplot(data = CompleteResponses, aes(x = salary)) +
geom_histogram(aes(fill=brand), bins = 6) +
facet_wrap(~zipcode)
ggplot(data = CompleteResponses, aes(x = salary)) +
geom_histogram(aes(fill=brand), bins = 6)
ggplot(data = CompleteResponses, aes(x = salary)) +
geom_histogram(aes(fill=brand), bins = 6) +
facet_wrap(~zipcode)
boxplot(CompleteResponses$age ~ CompleteResponses$brand)
ggplot(data = CompleteResponses)
ggplot(data = CompleteResponses) +
geom_boxplot(aes(x = brand, y = age)) #no difference in age between asus vs. sony
boxplot(CompleteResponses$age ~ CompleteResponses$brand)
ggplot(data = CompleteResponses) +
geom_boxplot(aes(x = brand, y = age))
ggplot(data = CompleteResponses, aes(x = age)) +
geom_bar(stat = "count", aes(fill=brand)) +
facet_wrap(~zipcode) #different zipcodes
ggplot(data = CompleteResponses, aes(x = elevel)) +
geom_bar(stat = "count", aes(fill=brand)) +
facet_wrap(~brand)
#make plot: difference in primary car between asus vs. sony
ggplot(data = CompleteResponses, aes(x = car)) +
geom_bar(stat = "count", aes(fill=brand)) +
facet_wrap(~brand) #no difference in primary car between asus vs. sony
#make plot: difference in zipcode between asus vs. sony
ggplot(data = CompleteResponses, aes(x = zipcode)) +
geom_bar(stat = "count", aes(fill=brand)) +
facet_wrap(~brand) #no difference in zipcode between asus vs. sony
#make plot: difference in credit between brand preference asus vs. sony
ggplot(data = CompleteResponses) +
geom_boxplot(aes(x = brand, y = credit))
ggplot(data = CompleteResponses, aes(x = credit)) +
geom_histogram(aes(fill=brand), bins = 10) +
facet_wrap(~zipcode)
#build model with C5.0
tree_mod = C5.0(x = trainSet[,1:6], y = trainSet[,7])
plot(tree_mod, type="s", main="Decision Tree")
#build model with C5.0
tree_mod = C5.0(x = trainSet[,1:6], y = trainSet[,7])
plot(tree_mod, type="s", main="Decision Tree")
#build model with C5.0
train(brand~.,
data = trainSet,
method = "C5.0")
#build model with C5.0
dt_model <- train(brand~., +
data = trainSet, +
method = "C5.0")
#build model with C5.0
dt_model <- train(brand~., +
data = trainSet, +
method = "C50")
#build model with C5.0
dt_model <- train(brand~., +
data = trainSet, +
method = "C5.0")
levels(CompleteResponses$brand) <-c('Asus','Sony')
View(CompleteResponses)
#changing false and true to asus and sony
levels(CompleteResponses$brand) <-c('Asus','Sony')
#checking the data types again after converstion
str(CompleteResponses)
#Making boxplots again for the converted attributes:
plot(CompleteResponses$elevel) #instead of hist which is only for numeric values
plot(CompleteResponses$car) #instead of hist which is only for numeric values
plot(CompleteResponses$zipcode) #instead of hist which is only for numeric values
#how to plot brand
plot(CompleteResponses$brand)
#pie chart
mytable <- table(CompleteResponses$brand)
pie(mytable, main="Pie Chart of Brands")
library(ggplot2)
#make plot: difference in salary between brand preference asus vs. sony
ggplot(data = CompleteResponses) +
geom_boxplot(aes(x = brand, y = salary)) #people buying sony have higher salary
ggplot(data = CompleteResponses, aes(x = salary)) +
geom_histogram(aes(fill=brand), bins = 6) +
facet_wrap(~zipcode)
#make plot: difference in age between brand preference asus vs. sony
boxplot(CompleteResponses$age ~ CompleteResponses$brand)
ggplot(data = CompleteResponses) +
geom_boxplot(aes(x = brand, y = age)) #no difference in age between asus vs. sony
ggplot(data = CompleteResponses, aes(x = age)) +
geom_bar(stat = "count", aes(fill=brand)) +
facet_wrap(~zipcode) #different zipcodes
#make plot: difference in elevel between asus vs. sony
ggplot(data = CompleteResponses, aes(x = elevel)) +
geom_bar(stat = "count", aes(fill=brand)) +
facet_wrap(~brand) #no difference in elevel between asus vs. sony
#make plot: difference in primary car between asus vs. sony
ggplot(data = CompleteResponses, aes(x = car)) +
geom_bar(stat = "count", aes(fill=brand)) +
facet_wrap(~brand) #no difference in primary car between asus vs. sony
#make plot: difference in zipcode between asus vs. sony
ggplot(data = CompleteResponses, aes(x = zipcode)) +
geom_bar(stat = "count", aes(fill=brand)) +
facet_wrap(~brand) #no difference in zipcode between asus vs. sony
#make plot: difference in credit between brand preference asus vs. sony
ggplot(data = CompleteResponses) +
geom_boxplot(aes(x = brand, y = credit))
ggplot(data = CompleteResponses, aes(x = credit)) +
geom_histogram(aes(fill=brand), bins = 10) +
facet_wrap(~zipcode)
#changing numeric value to categorical (discretization): salary, age and credit
Catsalary <- cut(CompleteResponses$salary, breaks=c(0,30000,60000,90000,120000,150000,180000)) #6 bins
library(caret)
library(caret)
set.seed(688)
inTraining <- createDataPartition(CompleteResponses$brand, p = .75, list = FALSE)
trainSet <- CompleteResponses[inTraining,]
testSet <- CompleteResponses[-inTraining,]
View(trainSet)
View(testSet)
#build model with decision tree C5.0
dt_model <- train(brand~., +
data = trainSet, +
method = "C5.0")
summary(trainSet)
summary(testSet)
str(trainSet)
str(testSet)
nrow(trainSet)
nrow(testSet)
dt_model <- train(brand ~.,
+ data = trainSet,
+ method = "pls",
+ preProcess = c("center","scale"))
dt_model <- train(brand ~.,
+ data = trainSet,
+ method = "pls")
dt_model <- train(brand ~.,
+ data = trainSet,
+ method = "pls")
View(trainSet)
dt_model <- train(brand ~.,
+ data = trainSet,
+ method = "C5.0")
dt_model <- train(brand ~.,
data = trainSet,
method = "C5.0")
ctrl <- trainControl(method = "repeatedcv",
+ repeats = 3)
dt_model <- train(brand ~.,
data = trainSet,
method = "C5.0",
tunelength = 2,
preProcess=c("center","scale"))
ctrl <- trainControl(method = "repeatedcv",
+ repeats = 3)
dt_model <- train(brand ~.,
data = trainSet,
method = "C5.0",
tunelength = 2,
preProcess=c("center","scale"))
#10 fold cross validation
fitControl <- trainControl(method = "repeatedcv",
number = 10,
repeats = 1)
dt_model <- train(brand ~.,
data = trainSet,
method = "C5.0",
tunelength = 2,
preProcess=c("center","scale"))
dt_model
dt_model
#building model using C5.0, tunelength = 2
dt_model <- train(brand ~.,
data = trainSet,
method = "C5.0",
tunelength = 2,
preProcess=c("center","scale"))
